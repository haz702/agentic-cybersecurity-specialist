{"id":"CVE-2024-50059","publishedDate":"2024-10-21T20:15:18.057","cvssV3":7.0,"description":"In the Linux kernel, the following vulnerability has been resolved:\n\nntb: ntb_hw_switchtec: Fix use after free vulnerability in switchtec_ntb_remove due to race condition\n\nIn the switchtec_ntb_add function, it can call switchtec_ntb_init_sndev\nfunction, then &sndev->check_link_status_work is bound with\ncheck_link_status_work. switchtec_ntb_link_notification may be called\nto start the work.\n\nIf we remove the module which will call switchtec_ntb_remove to make\ncleanup, it will free sndev through kfree(sndev), while the work\nmentioned above will be used. The sequence of operations that may lead\nto a UAF bug is as follows:\n\nCPU0                                 CPU1\n\n                        | check_link_status_work\nswitchtec_ntb_remove    |\nkfree(sndev);           |\n                        | if (sndev->link_force_down)\n                        | // use sndev\n\nFix it by ensuring that the work is canceled before proceeding with\nthe cleanup in switchtec_ntb_remove.","references":["https://git.kernel.org/stable/c/177925d9c8715a897bb79eca62628862213ba956","https://git.kernel.org/stable/c/3ae45be8492460a35b5aebf6acac1f1d32708946","https://git.kernel.org/stable/c/5126d8f5567f49b52e21fca320eaa97977055099","https://git.kernel.org/stable/c/92728fceefdaa2a0a3aae675f86193b006eeaa43","https://git.kernel.org/stable/c/b650189687822b705711f0567a65a164a314d8df","https://git.kernel.org/stable/c/e51aded92d42784313ba16c12f4f88cc4f973bbb","https://git.kernel.org/stable/c/fa840ba4bd9f3bad7f104e5b32028ee73af8b3dd"]}